#define BUFFSIZE	4096
#define BASELEN		500000000
#define	READTRK		10000
#define RDIDLEN		255

void increment( unsigned short *a, int startpos, int endpos )
{
	int i;
	for( i=startpos; i<=endpos; i++ )
	{
//		fprintf(stderr,"Incrementing at postition %d from %d to %d...\n",i,a[i],(a[i]+1));
		a[i]++;
	}
}

void decrement( unsigned short *a, int startpos, int endpos )
{
	int i;
	for( i=startpos; i<=endpos; i++ )
	{
		a[i]--;
	}
}

void addtolbm( char *lbm, char *rdid, int *lowestlbm, int *sizeoflbm )
{
	int i;
	strcpy( lbm[*lowestlbm], rdid );
	if( *lowestlbm == *sizeoflbm )
	{
		*lowestlbm++;
		*sizeoflbm++;
	}
	else
	{
		for( i = *lowestlbm; i<=*sizeoflbm; i++ )
		{
			if( lbm[i] == "" )
			{
				*lowestlbm = i;
				break;
			}
			*lowestlbm = *sizeoflbm;
		}
	}
}

int checklbm( char *lbm, char *rdid, int *sizeoflbm )
{
	int i;
	for( i=0; i<sizeoflbm; i++ )
	{
		if( !strcmp( lbm[i],rdid ) )
		{
			return i;
		}
	}
	return -1;
}

void deletefromlbm( char *lbm, int *which, int *lowestlbm, int *sizeoflbm )
{
	lbm[*which] = "";	
}

